package com.epic.tle.mapping;
// Generated May 31, 2017 9:39:12 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EpicTleUserProfile generated by hbm2java
 */
@Entity
@Table(name = "EPIC_TLE_USER_PROFILE"
//    ,catalog="epictle_v5ch"
)
public class EpicTleUserProfile implements java.io.Serializable {

    private int code;
    private EpicTleStatus epicTleStatus;
    private String description;
    private Date createdate;
    private Set<EpicTleHistory> epicTleHistories = new HashSet<EpicTleHistory>(0);
    private Set<EpicTleUser> epicTleUsers = new HashSet<EpicTleUser>(0);
    private Set<EpicTleProfilePrivilage> epicTleProfilePrivilages = new HashSet<EpicTleProfilePrivilage>(0);

    public EpicTleUserProfile() {
    }

    public EpicTleUserProfile(int code) {
        this.code = code;
    }

    public EpicTleUserProfile(int code, String description) {
        this.code = code;
        this.description = description;
    }

    public EpicTleUserProfile(int code, EpicTleStatus epicTleStatus, String description, Date createdate, Set<EpicTleHistory> epicTleHistories, Set<EpicTleUser> epicTleUsers, Set<EpicTleProfilePrivilage> epicTleProfilePrivilages) {
        this.code = code;
        this.epicTleStatus = epicTleStatus;
        this.description = description;
        this.createdate = createdate;
        this.epicTleHistories = epicTleHistories;
        this.epicTleUsers = epicTleUsers;
        this.epicTleProfilePrivilages = epicTleProfilePrivilages;
    }

    @Id

    @Column(name = "CODE", unique = true, nullable = false)
    public int getCode() {
        return this.code;
    }

    public void setCode(int code) {
        this.code = code;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STATUS")
    public EpicTleStatus getEpicTleStatus() {
        return this.epicTleStatus;
    }

    public void setEpicTleStatus(EpicTleStatus epicTleStatus) {
        this.epicTleStatus = epicTleStatus;
    }

    @Column(name = "DESCRIPTION", nullable = false, length = 20)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATEDATE", length = 19)
    public Date getCreatedate() {
        return this.createdate;
    }

    public void setCreatedate(Date createdate) {
        this.createdate = createdate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleUserProfile")
    public Set<EpicTleHistory> getEpicTleHistories() {
        return this.epicTleHistories;
    }

    public void setEpicTleHistories(Set<EpicTleHistory> epicTleHistories) {
        this.epicTleHistories = epicTleHistories;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleUserProfile")
    public Set<EpicTleUser> getEpicTleUsers() {
        return this.epicTleUsers;
    }

    public void setEpicTleUsers(Set<EpicTleUser> epicTleUsers) {
        this.epicTleUsers = epicTleUsers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleUserProfile")
    public Set<EpicTleProfilePrivilage> getEpicTleProfilePrivilages() {
        return this.epicTleProfilePrivilages;
    }

    public void setEpicTleProfilePrivilages(Set<EpicTleProfilePrivilage> epicTleProfilePrivilages) {
        this.epicTleProfilePrivilages = epicTleProfilePrivilages;
    }

    @Override
    public String toString() {
        String prv = "";
        try {
        if (epicTleProfilePrivilages != null) {
            for (EpicTleProfilePrivilage prvLage : epicTleProfilePrivilages) {
                prv += "Module = " +prvLage.getEpicTleModule().getDescription()+" & Section = " +prvLage.getEpicTleSection().getSectionName()+ " & Task = "+prvLage.getEpicTleTask().getDescription()+ " | ";
            }            
            prv=prv.substring(0,prv.length()-2);
        }
                }
        catch (Exception e) {
        }
        try {
            return "{" + "code : " + code + ", status : " + epicTleStatus.getCode() + ", description: " + description + ", createdate: " + createdate + ", Profile Privilages : " +prv+'}';
        } catch (Exception e) {
            return "{" + "code : " + code + ", description : " + description + ", createdate : " + createdate +", Profile Privilages : " +prv+ '}';
        }
    }

    public  String forHistory() {
        try {
            return "{" + "code : " + code + ", status : " + epicTleStatus.getCode() + ", description: " + description + ", createdate: " + createdate + '}';
        } catch (Exception e) {
            return "{" + "code : " + code + ", description : " + description + ", createdate : " + createdate + '}';
        }
    }

}
