package com.epic.tle.mapping;
// Generated May 31, 2017 9:39:12 AM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * EpicTlePasswordPolicy generated by hbm2java
 */
@Entity
@Table(name="EPIC_TLE_PASSWORD_POLICY"
//    ,catalog="epictle_v5ch"
)
public class EpicTlePasswordPolicy  implements java.io.Serializable {


     private Integer sid;
     private EpicTleStatus epicTleStatus;
     private Integer maxLegnth;
     private Integer minLegnth;
     private String allowspecialcharacters;
     private Integer minSpclChars;
     private Integer maxSpclChars;
     private Integer minUppercase;
     private Integer minLowcase;
     private Integer minNumerics;
     private Integer expierDateLimit;
     private Date lstupdatedate;

    public EpicTlePasswordPolicy() {
    }

    public EpicTlePasswordPolicy(EpicTleStatus epicTleStatus, Integer maxLegnth, Integer minLegnth, String allowspecialcharacters, Integer minSpclChars, Integer maxSpclChars, Integer minUppercase, Integer minLowcase, Integer minNumerics, Integer expierDateLimit, Date lstupdatedate) {
       this.epicTleStatus = epicTleStatus;
       this.maxLegnth = maxLegnth;
       this.minLegnth = minLegnth;
       this.allowspecialcharacters = allowspecialcharacters;
       this.minSpclChars = minSpclChars;
       this.maxSpclChars = maxSpclChars;
       this.minUppercase = minUppercase;
       this.minLowcase = minLowcase;
       this.minNumerics = minNumerics;
       this.expierDateLimit = expierDateLimit;
       this.lstupdatedate = lstupdatedate;
    }
   
    @Id
    @GenericGenerator(name = "id_generator", strategy = "com.epic.tle.util.IdGenerator", parameters= {@Parameter(name="columnPram", value = "sid")})
    @GeneratedValue(generator = "id_generator") 
    @Column(name="SID", unique=true, nullable=false)
    public Integer getSid() {
        return this.sid;
    }
    
    public void setSid(Integer sid) {
        this.sid = sid;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS")
    public EpicTleStatus getEpicTleStatus() {
        return this.epicTleStatus;
    }
    
    public void setEpicTleStatus(EpicTleStatus epicTleStatus) {
        this.epicTleStatus = epicTleStatus;
    }

    
    @Column(name="MAX_LEGNTH")
    public Integer getMaxLegnth() {
        return this.maxLegnth;
    }
    
    public void setMaxLegnth(Integer maxLegnth) {
        this.maxLegnth = maxLegnth;
    }

    
    @Column(name="MIN_LEGNTH")
    public Integer getMinLegnth() {
        return this.minLegnth;
    }
    
    public void setMinLegnth(Integer minLegnth) {
        this.minLegnth = minLegnth;
    }

    
    @Column(name="ALLOWSPECIALCHARACTERS", length=100)
    public String getAllowspecialcharacters() {
        return this.allowspecialcharacters;
    }
    
    public void setAllowspecialcharacters(String allowspecialcharacters) {
        this.allowspecialcharacters = allowspecialcharacters;
    }

    
    @Column(name="MIN_SPCL_CHARS")
    public Integer getMinSpclChars() {
        return this.minSpclChars;
    }
    
    public void setMinSpclChars(Integer minSpclChars) {
        this.minSpclChars = minSpclChars;
    }

    
    @Column(name="MAX_SPCL_CHARS")
    public Integer getMaxSpclChars() {
        return this.maxSpclChars;
    }
    
    public void setMaxSpclChars(Integer maxSpclChars) {
        this.maxSpclChars = maxSpclChars;
    }

    
    @Column(name="MIN_UPPERCASE")
    public Integer getMinUppercase() {
        return this.minUppercase;
    }
    
    public void setMinUppercase(Integer minUppercase) {
        this.minUppercase = minUppercase;
    }

    
    @Column(name="MIN_LOWCASE")
    public Integer getMinLowcase() {
        return this.minLowcase;
    }
    
    public void setMinLowcase(Integer minLowcase) {
        this.minLowcase = minLowcase;
    }

    
    @Column(name="MIN_NUMERICS")
    public Integer getMinNumerics() {
        return this.minNumerics;
    }
    
    public void setMinNumerics(Integer minNumerics) {
        this.minNumerics = minNumerics;
    }

    
    @Column(name="EXPIER_DATE_LIMIT")
    public Integer getExpierDateLimit() {
        return this.expierDateLimit;
    }
    
    public void setExpierDateLimit(Integer expierDateLimit) {
        this.expierDateLimit = expierDateLimit;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LSTUPDATEDATE", length=19)
    public Date getLstupdatedate() {
        return this.lstupdatedate;
    }
    
    public void setLstupdatedate(Date lstupdatedate) {
        this.lstupdatedate = lstupdatedate;
    }

    @Override
    public String toString() {
       try{
            return "{" + "Sid:" + sid + ", Status:" + epicTleStatus.getCode() + ", Max Legnth:" + maxLegnth + ", Min Legnth:" + minLegnth + ", Allowed special characters:" + allowspecialcharacters + ", Min special characters:" + minSpclChars + ", Max special characters:" + maxSpclChars + ", Min Upper case:" + minUppercase + ", Min Lower case:" + minLowcase + ", Min Numerics:" + minNumerics + ", Expier Date Limit:" + expierDateLimit + '}';
        }
        catch(Exception e){
            return "{" + "Sid:" + sid  + ", Max Legnth:" + maxLegnth + ", Min Legnth:" + minLegnth + ", Allowed special characters:" + allowspecialcharacters + ", Min special characters:" + minSpclChars + ", Max special characters:" + maxSpclChars + ", Min Upper case:" + minUppercase + ", Min Lower case:" + minLowcase + ", Min Numerics:" + minNumerics + ", Expier Date Limit:" + expierDateLimit  + '}';
        }
    }
    
     public String forHistory() {
        try{
            return "{" + "Sid:" + sid + ", Status:" + epicTleStatus.getCode() + ", Max Legnth:" + maxLegnth + ", Min Legnth:" + minLegnth + ", Allowed special characters:" + allowspecialcharacters + ", Min special characters:" + minSpclChars + ", Max special characters:" + maxSpclChars + ", Min Upper case:" + minUppercase + ", Min Lower case:" + minLowcase + ", Min Numerics:" + minNumerics + ", Expier Date Limit:" + expierDateLimit + '}';
        }
        catch(Exception e){
            return "{" + "Sid:" + sid  + ", Max Legnth:" + maxLegnth + ", Min Legnth:" + minLegnth + ", Allowed special characters:" + allowspecialcharacters + ", Min special characters:" + minSpclChars + ", Max special characters:" + maxSpclChars + ", Min Upper case:" + minUppercase + ", Min Lower case:" + minLowcase + ", Min Numerics:" + minNumerics + ", Expier Date Limit:" + expierDateLimit  + '}';
        }
    }
}


