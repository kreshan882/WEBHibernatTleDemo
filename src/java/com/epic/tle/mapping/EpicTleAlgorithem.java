package com.epic.tle.mapping;
// Generated May 31, 2017 9:39:12 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EpicTleAlgorithem generated by hbm2java
 */
@Entity
@Table(name="EPIC_TLE_ALGORITHEM"
//    ,catalog="epictle_v5ch"
)
public class EpicTleAlgorithem  implements java.io.Serializable {


     private int code;
     private String description;
     private Set<EpicTleCardholders> epicTleCardholderses = new HashSet<EpicTleCardholders>(0);

    public EpicTleAlgorithem() {
    }

	
    public EpicTleAlgorithem(int code, String description) {
        this.code = code;
        this.description = description;
    }
    public EpicTleAlgorithem(int code, String description, Set<EpicTleCardholders> epicTleCardholderses) {
       this.code = code;
       this.description = description;
       this.epicTleCardholderses = epicTleCardholderses;
    }
   
     @Id 

    
    @Column(name="CODE", unique=true, nullable=false)
    public int getCode() {
        return this.code;
    }
    
    public void setCode(int code) {
        this.code = code;
    }

    
    @Column(name="DESCRIPTION", nullable=false, length=20)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="epicTleAlgorithem")
    public Set<EpicTleCardholders> getEpicTleCardholderses() {
        return this.epicTleCardholderses;
    }
    
    public void setEpicTleCardholderses(Set<EpicTleCardholders> epicTleCardholderses) {
        this.epicTleCardholderses = epicTleCardholderses;
    }

    @Override
    public String toString() {
        return "EpicTleAlgorithem{" + "code=" + code + ", description=" + description + ", epicTleCardholderses=" + epicTleCardholderses + '}';
    }




}


