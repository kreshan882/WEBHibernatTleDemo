package com.epic.tle.mapping;
// Generated Jul 20, 2017 1:55:20 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * EpicTleTerminal generated by hbm2java
 */
@Entity
@Table(name="EPIC_TLE_TERMINAL"
//    ,catalog="epictle_v5ch"
    , uniqueConstraints = @UniqueConstraint(columnNames="SID") 
)
public class EpicTleTerminal  implements java.io.Serializable {


     private String tid;
     private EpicTleBinProfile epicTleBinProfile;
     private EpicTleEncryptionlevles epicTleEncryptionlevles;
     private EpicTleStatus epicTleStatusByNonenctxnstatus;
     private EpicTleStatus epicTleStatusByStatus;
     private EpicTleStatus epicTleStatusByBinstatus;
     private EpicTleTerminalRefprofile epicTleTerminalRefprofile;
     private int sid;
     private String mid;
     private String serialNo;
     private String bank;
     private String name;
     private String location;
     private String regdate;
     private String etmksessionkey="10101010101010101010101010101010";
     private String emkesessionkey="10101010101010101010101010101010";
     private String tmkkvc="101010";
     private String mekkvc="101010";
     private String oldkvc="101010";
     private String keyid="101010101010";
     private Date lastupdatedate;
     private String countor="0";
     private Date lasttxndate;
     private String terminalbrand;
     private Integer bdkId=0;

    public EpicTleTerminal() {
    }

	
    public EpicTleTerminal(int sid, Date lastupdatedate) {
        this.sid = sid;
        this.lastupdatedate = lastupdatedate;
    }
    public EpicTleTerminal(EpicTleBinProfile epicTleBinProfile, EpicTleEncryptionlevles epicTleEncryptionlevles, EpicTleStatus epicTleStatusByNonenctxnstatus, EpicTleStatus epicTleStatusByStatus, EpicTleStatus epicTleStatusByBinstatus, EpicTleTerminalRefprofile epicTleTerminalRefprofile, int sid, String mid, String serialNo, String bank, String name, String location, String regdate, String etmksessionkey, String emkesessionkey, String tmkkvc, String mekkvc, String oldkvc, String keyid, Date lastupdatedate, String countor, Date lasttxndate, String terminalbrand, Integer bdkId) {
       this.epicTleBinProfile = epicTleBinProfile;
       this.epicTleEncryptionlevles = epicTleEncryptionlevles;
       this.epicTleStatusByNonenctxnstatus = epicTleStatusByNonenctxnstatus;
       this.epicTleStatusByStatus = epicTleStatusByStatus;
       this.epicTleStatusByBinstatus = epicTleStatusByBinstatus;
       this.epicTleTerminalRefprofile = epicTleTerminalRefprofile;
       this.sid = sid;
       this.mid = mid;
       this.serialNo = serialNo;
       this.bank = bank;
       this.name = name;
       this.location = location;
       this.regdate = regdate;
       this.etmksessionkey = etmksessionkey;
       this.emkesessionkey = emkesessionkey;
       this.tmkkvc = tmkkvc;
       this.mekkvc = mekkvc;
       this.oldkvc = oldkvc;
       this.keyid = keyid;
       this.lastupdatedate = lastupdatedate;
       this.countor = countor;
       this.lasttxndate = lasttxndate;
       this.terminalbrand = terminalbrand;
       this.bdkId = bdkId;
    }
   
    @Id
    @Column(name="TID", unique=true, nullable=false, length=8)
    public String getTid() {
        return this.tid;
    }
    
    public void setTid(String tid) {
        this.tid = tid;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BIN_PROFILE_NUM")
    public EpicTleBinProfile getEpicTleBinProfile() {
        return this.epicTleBinProfile;
    }
    
    public void setEpicTleBinProfile(EpicTleBinProfile epicTleBinProfile) {
        this.epicTleBinProfile = epicTleBinProfile;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ENCRYPTIONSTATUS")
    public EpicTleEncryptionlevles getEpicTleEncryptionlevles() {
        return this.epicTleEncryptionlevles;
    }
    
    public void setEpicTleEncryptionlevles(EpicTleEncryptionlevles epicTleEncryptionlevles) {
        this.epicTleEncryptionlevles = epicTleEncryptionlevles;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="NONENCTXNSTATUS")
    public EpicTleStatus getEpicTleStatusByNonenctxnstatus() {
        return this.epicTleStatusByNonenctxnstatus;
    }
    
    public void setEpicTleStatusByNonenctxnstatus(EpicTleStatus epicTleStatusByNonenctxnstatus) {
        this.epicTleStatusByNonenctxnstatus = epicTleStatusByNonenctxnstatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS")
    public EpicTleStatus getEpicTleStatusByStatus() {
        return this.epicTleStatusByStatus;
    }
    
    public void setEpicTleStatusByStatus(EpicTleStatus epicTleStatusByStatus) {
        this.epicTleStatusByStatus = epicTleStatusByStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BINSTATUS")
    public EpicTleStatus getEpicTleStatusByBinstatus() {
        return this.epicTleStatusByBinstatus;
    }
    
    public void setEpicTleStatusByBinstatus(EpicTleStatus epicTleStatusByBinstatus) {
        this.epicTleStatusByBinstatus = epicTleStatusByBinstatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="RISK_PROFILE_ID")
    public EpicTleTerminalRefprofile getEpicTleTerminalRefprofile() {
        return this.epicTleTerminalRefprofile;
    }
    
    public void setEpicTleTerminalRefprofile(EpicTleTerminalRefprofile epicTleTerminalRefprofile) {
        this.epicTleTerminalRefprofile = epicTleTerminalRefprofile;
    }

    
    @Column(name="SID")
    @Id
    @GenericGenerator(name = "id_generator", strategy = "com.epic.tle.util.IdGenerator", parameters= {@Parameter(name="columnPram", value = "sid")})
    @GeneratedValue(generator = "id_generator")
    public int getSid() {
        return this.sid;
    }
    
    public void setSid(int sid) {
        this.sid = sid;
    }

    
    @Column(name="MID", length=15)
    public String getMid() {
        return this.mid;
    }
    
    public void setMid(String mid) {
        this.mid = mid;
    }

    
    @Column(name="SERIAL_NO", length=16)
    public String getSerialNo() {
        return this.serialNo;
    }
    
    public void setSerialNo(String serialNo) {
        this.serialNo = serialNo;
    }

    
    @Column(name="BANK", length=50)
    public String getBank() {
        return this.bank;
    }
    
    public void setBank(String bank) {
        this.bank = bank;
    }

    
    @Column(name="NAME", length=80)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="LOCATION", length=80)
    public String getLocation() {
        return this.location;
    }
    
    public void setLocation(String location) {
        this.location = location;
    }

    
    @Column(name="REGDATE", length=20)
    public String getRegdate() {
        return this.regdate;
    }
    
    public void setRegdate(String regdate) {
        this.regdate = regdate;
    }

    
    @Column(name="ETMK", length=32)
    public String getEtmksessionkey() {
        return this.etmksessionkey;
    }
    
    public void setEtmksessionkey(String etmksessionkey) {
        this.etmksessionkey = etmksessionkey;
    }

    
    @Column(name="EMEK", length=32)
    public String getEmkesessionkey() {
        return this.emkesessionkey;
    }
    
    public void setEmkesessionkey(String emkesessionkey) {
        this.emkesessionkey = emkesessionkey;
    }

    
    @Column(name="TMKKVC", length=6)
    public String getTmkkvc() {
        return this.tmkkvc;
    }
    
    public void setTmkkvc(String tmkkvc) {
        this.tmkkvc = tmkkvc;
    }

    
    @Column(name="MEKKVC", length=6)
    public String getMekkvc() {
        return this.mekkvc;
    }
    
    public void setMekkvc(String mekkvc) {
        this.mekkvc = mekkvc;
    }

    
    @Column(name="OLDKVC", length=6)
    public String getOldkvc() {
        return this.oldkvc;
    }
    
    public void setOldkvc(String oldkvc) {
        this.oldkvc = oldkvc;
    }

    
    @Column(name="KEYID", length=12)
    public String getKeyid() {
        return this.keyid;
    }
    
    public void setKeyid(String keyid) {
        this.keyid = keyid;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDATE", nullable=false, length=19)
    public Date getLastupdatedate() {
        return this.lastupdatedate;
    }
    
    public void setLastupdatedate(Date lastupdatedate) {
        this.lastupdatedate = lastupdatedate;
    }

    
    @Column(name="COUNTOR", length=12)
    public String getCountor() {
        return this.countor;
    }
    
    public void setCountor(String countor) {
        this.countor = countor;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="LASTTXNDATE", length=10)
    public Date getLasttxndate() {
        return this.lasttxndate;
    }
    
    public void setLasttxndate(Date lasttxndate) {
        this.lasttxndate = lasttxndate;
    }

    
    @Column(name="TERMINALBRAND", length=50)
    public String getTerminalbrand() {
        return this.terminalbrand;
    }
    
    public void setTerminalbrand(String terminalbrand) {
        this.terminalbrand = terminalbrand;
    }

    
    @Column(name="BDK_ID")
    public Integer getBdkId() {
        return this.bdkId;
    }
    
    public void setBdkId(Integer bdkId) {
        this.bdkId = bdkId;
    }

    @Override
    public String toString() {
       try{
            return "{" + "tid: " + tid + ", Bin Profile:" + epicTleBinProfile.getId() + ", Encryption levles:" + epicTleEncryptionlevles.getCode() + ", None Nc Transacion status : " + epicTleStatusByNonenctxnstatus.getCode() + ", status :" + epicTleStatusByStatus.getCode() + ", Bin Status :" + epicTleStatusByBinstatus.getCode() + ", Ref Profile :" + epicTleTerminalRefprofile.getId() + ", sid:" + sid + ", mid:" + mid + ", serialNo:" + serialNo + ", bank:" + bank + ", name:" + name + ", location:" + location + ", regdate:" + regdate + ", etmk session key:" + etmksessionkey + ", emke session key:" + emkesessionkey + ", tmkkvc:" + tmkkvc + ", mekkvc:" + mekkvc + ", oldkvc:" + oldkvc + ", keyid:" + keyid + ", last update date:" + lastupdatedate + ", countor:" + countor + ", last txn date:" + lasttxndate + ", terminal brand:" + terminalbrand + ", bdkId:" + bdkId + '}';
        }
        catch(Exception e){
            return "{" + "tid: " + tid   + ", sid:" + sid + ", mid:" + mid + ", serial No:" + serialNo + ", bank: " + bank + ", name:" + name + ", location:" + location + ", regdate:" + regdate + ", etmk session key:" + etmksessionkey + ", emke session key:" + emkesessionkey + ", tmkkvc:" + tmkkvc + ", mekkvc:" + mekkvc + ", oldkvc:" + oldkvc + ", keyid:" + keyid + ", last update date:" + lastupdatedate + ", countor:" + countor + ", last txn date:" + lasttxndate + ", terminal brand:" + terminalbrand + ", bdkId:" + bdkId + '}';
        }
    }
    public String forHistory() {
        try{
            return "{" + "tid: " + tid + ", Bin Profile:" + epicTleBinProfile.getId() + ", Encryption levles:" + epicTleEncryptionlevles.getCode() + ", None Nc Transacion status : " + epicTleStatusByNonenctxnstatus.getCode() + ", status :" + epicTleStatusByStatus.getCode() + ", Bin Status :" + epicTleStatusByBinstatus.getCode() + ", Ref Profile :" + epicTleTerminalRefprofile.getId() + ", sid:" + sid + ", mid:" + mid + ", serialNo:" + serialNo + ", bank:" + bank + ", name:" + name + ", location:" + location + ", regdate:" + regdate + ", etmk session key:" + etmksessionkey + ", emke session key:" + emkesessionkey + ", tmkkvc:" + tmkkvc + ", mekkvc:" + mekkvc + ", oldkvc:" + oldkvc + ", keyid:" + keyid + ", last update date:" + lastupdatedate + ", countor:" + countor + ", last txn date:" + lasttxndate + ", terminal brand:" + terminalbrand + ", bdkId:" + bdkId + '}';
        }
        catch(Exception e){
            return "{" + "tid: " + tid   + ", sid:" + sid + ", mid:" + mid + ", serial No:" + serialNo + ", bank: " + bank + ", name:" + name + ", location:" + location + ", regdate:" + regdate + ", etmk session key:" + etmksessionkey + ", emke session key:" + emkesessionkey + ", tmkkvc:" + tmkkvc + ", mekkvc:" + mekkvc + ", oldkvc:" + oldkvc + ", keyid:" + keyid + ", last update date:" + lastupdatedate + ", countor:" + countor + ", last txn date:" + lasttxndate + ", terminal brand:" + terminalbrand + ", bdkId:" + bdkId + '}';
        }
    }




}


