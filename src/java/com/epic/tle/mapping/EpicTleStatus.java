package com.epic.tle.mapping;
// Generated May 31, 2017 9:39:12 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EpicTleStatus generated by hbm2java
 */
@Entity
@Table(name = "EPIC_TLE_STATUS"
//        , catalog = "epictle_v5ch"
)
public class EpicTleStatus implements java.io.Serializable {

    private int code;
    private String description;
    private Set<EpicTleUser> epicTleUsers = new HashSet<EpicTleUser>(0);

    private Set<EpicTleUserProfile> epicTleUserProfiles = new HashSet<EpicTleUserProfile>(0);

    private Set<EpicTleAlerts> epicTleAlertses = new HashSet<EpicTleAlerts>(0);
    private Set<EpicTleCardholders> epicTleCardholderses = new HashSet<EpicTleCardholders>(0);

    private Set<EpicTleEsmodule> epicTleEsmodules = new HashSet<EpicTleEsmodule>(0);

    private Set<EpicTleOperationAlerts> epicTleOperationAlertses = new HashSet<EpicTleOperationAlerts>(0);

    private Set<EpicTlePasswordPolicy> epicTlePasswordPolicies = new HashSet<EpicTlePasswordPolicy>(0);

    private Set<EpicTleListeners> epicTleListenersesForTpduStatus = new HashSet<EpicTleListeners>(0);
    private Set<EpicTleListeners> epicTleListenersesForListenerKeepAliveStatus = new HashSet<EpicTleListeners>(0);
    private Set<EpicTleListeners> epicTleListenersesForBindStatus = new HashSet<EpicTleListeners>(0);
    private Set<EpicTleListeners> epicTleListenersesForStatus = new HashSet<EpicTleListeners>(0);

    private Set<EpicTleSysOperation> epicTleSysOperations = new HashSet<EpicTleSysOperation>(0);

    private Set<EpicTleStatusofresponse> epicTleStatusofresponses = new HashSet<EpicTleStatusofresponse>(0);

    private Set<EpicTleTerminal> epicTleTerminalsForNonenctxnstatus = new HashSet<EpicTleTerminal>(0);
    private Set<EpicTleTerminal> epicTleTerminalsForStatus = new HashSet<EpicTleTerminal>(0);
    private Set<EpicTleTerminal> epicTleTerminalsForBinstatus = new HashSet<EpicTleTerminal>(0);

    private Set<EpicTleChannel> epicTleChannelsForTpduStatus = new HashSet<EpicTleChannel>(0);
    private Set<EpicTleChannel> epicTleChannelsForPintranslateStatus = new HashSet<EpicTleChannel>(0);
    private Set<EpicTleChannel> epicTleChannelsForBindStatus = new HashSet<EpicTleChannel>(0);
    private Set<EpicTleChannel> epicTleChannelsForLoadbalancestatus = new HashSet<EpicTleChannel>(0);
    private Set<EpicTleChannel> epicTleChannelsForBindSecondaryStatus = new HashSet<EpicTleChannel>(0);
    private Set<EpicTleChannel> epicTleChannelsForStatus = new HashSet<EpicTleChannel>(0);
    private Set<EpicTleChannel> epicTleChannelsForKeepAliveStatus = new HashSet<EpicTleChannel>(0);

    private Set<EpicTleProcessingTime> epicTleProcessingTimes = new HashSet<EpicTleProcessingTime>(0);

    private Set<EpicTleInitconfig> epicTleInitconfigsForAutoRegistaryStatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleInitconfig> epicTleInitconfigsForSmsNotifyStatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleInitconfig> epicTleInitconfigsForUkptStatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleInitconfig> epicTleInitconfigsForCoreDebugStatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleInitconfig> epicTleInitconfigsForLogbackupstatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleInitconfig> epicTleInitconfigsForEsmstatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleInitconfig> epicTleInitconfigsForMonitorstatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleInitconfig> epicTleInitconfigsForHostfailalertstatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleInitconfig> epicTleInitconfigsForAdVerifyStatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleInitconfig> epicTleInitconfigsForVipstatus = new HashSet<EpicTleInitconfig>(0);
    private Set<EpicTleTerminalRefprofile> epicTleTerminalRefprofilesForStatus = new HashSet<EpicTleTerminalRefprofile>(0);
    private Set<EpicTleTerminalRefprofile> epicTleTerminalRefprofilesForNfcTxnStatus = new HashSet<EpicTleTerminalRefprofile>(0);
    private Set<EpicTleTerminalRefprofile> epicTleTerminalRefprofilesForPinTxnStatus = new HashSet<EpicTleTerminalRefprofile>(0);

    public EpicTleStatus() {
    }

    public EpicTleStatus(int code) {
        this.code = code;
    }

    public EpicTleStatus(int code, Set<EpicTleProcessingTime> epicTleProcessingTimes, String description, Set<EpicTleTerminal> epicTleTerminalsForNonenctxnstatus, Set<EpicTleUser> epicTleUsers, Set<EpicTleUserProfile> epicTleUserProfiles, Set<EpicTleAlerts> epicTleAlertses, Set<EpicTleTerminal> epicTleTerminalsForStatus, Set<EpicTleListeners> epicTleListenersesForTpduStatus, Set<EpicTleCardholders> epicTleCardholderses, Set<EpicTleListeners> epicTleListenersesForBindStatus, Set<EpicTleListeners> epicTleListenersesForStatus, Set<EpicTleEsmodule> epicTleEsmodules, Set<EpicTleChannel> epicTleChannelsForStatus, Set<EpicTleChannel> epicTleChannelsForKeepAliveStatus, Set<EpicTleOperationAlerts> epicTleOperationAlertses, Set<EpicTlePasswordPolicy> epicTlePasswordPolicies, Set<EpicTleChannel> epicTleChannelsForBindStatus, Set<EpicTleChannel> epicTleChannelsForLoadbalancestatus, Set<EpicTleChannel> epicTleChannelsForBindSecondaryStatus, Set<EpicTleListeners> epicTleListenersesForListenerKeepAliveStatus, Set<EpicTleSysOperation> epicTleSysOperations, Set<EpicTleStatusofresponse> epicTleStatusofresponses, Set<EpicTleChannel> epicTleChannelsForPintranslateStatus, Set<EpicTleChannel> epicTleChannelsForTpduStatus) {
        this.code = code;
        this.description = description;
        this.epicTleProcessingTimes = epicTleProcessingTimes;
        this.epicTleTerminalsForNonenctxnstatus = epicTleTerminalsForNonenctxnstatus;
        this.epicTleUsers = epicTleUsers;
        this.epicTleUserProfiles = epicTleUserProfiles;
        this.epicTleAlertses = epicTleAlertses;
        this.epicTleTerminalsForStatus = epicTleTerminalsForStatus;
        this.epicTleListenersesForTpduStatus = epicTleListenersesForTpduStatus;
        this.epicTleCardholderses = epicTleCardholderses;
        this.epicTleListenersesForBindStatus = epicTleListenersesForBindStatus;
        this.epicTleListenersesForStatus = epicTleListenersesForStatus;
        this.epicTleEsmodules = epicTleEsmodules;
        this.epicTleChannelsForStatus = epicTleChannelsForStatus;
        this.epicTleChannelsForKeepAliveStatus = epicTleChannelsForKeepAliveStatus;
        this.epicTleOperationAlertses = epicTleOperationAlertses;
        this.epicTlePasswordPolicies = epicTlePasswordPolicies;
        this.epicTleChannelsForBindStatus = epicTleChannelsForBindStatus;
        this.epicTleChannelsForLoadbalancestatus = epicTleChannelsForLoadbalancestatus;
        this.epicTleChannelsForBindSecondaryStatus = epicTleChannelsForBindSecondaryStatus;
        this.epicTleListenersesForListenerKeepAliveStatus = epicTleListenersesForListenerKeepAliveStatus;
        this.epicTleSysOperations = epicTleSysOperations;
        this.epicTleStatusofresponses = epicTleStatusofresponses;
        this.epicTleChannelsForTpduStatus = epicTleChannelsForTpduStatus;
        this.epicTleChannelsForPintranslateStatus = epicTleChannelsForPintranslateStatus;
    }

    @Id

    @Column(name = "CODE", unique = true, nullable = false)
    public int getCode() {
        return this.code;
    }

    public void setCode(int code) {
        this.code = code;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTleProcessingTime> getEpicTleProcessingTimes() {
        return this.epicTleProcessingTimes;
    }

    public void setEpicTleProcessingTimes(Set<EpicTleProcessingTime> epicTleProcessingTimes) {
        this.epicTleProcessingTimes = epicTleProcessingTimes;
    }

    @Column(name = "DESCRIPTION", length = 20)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByNonenctxnstatus")
    public Set<EpicTleTerminal> getEpicTleTerminalsForNonenctxnstatus() {
        return this.epicTleTerminalsForNonenctxnstatus;
    }

    public void setEpicTleTerminalsForNonenctxnstatus(Set<EpicTleTerminal> epicTleTerminalsForNonenctxnstatus) {
        this.epicTleTerminalsForNonenctxnstatus = epicTleTerminalsForNonenctxnstatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTleUser> getEpicTleUsers() {
        return this.epicTleUsers;
    }

    public void setEpicTleUsers(Set<EpicTleUser> epicTleUsers) {
        this.epicTleUsers = epicTleUsers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTleUserProfile> getEpicTleUserProfiles() {
        return this.epicTleUserProfiles;
    }

    public void setEpicTleUserProfiles(Set<EpicTleUserProfile> epicTleUserProfiles) {
        this.epicTleUserProfiles = epicTleUserProfiles;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTleAlerts> getEpicTleAlertses() {
        return this.epicTleAlertses;
    }

    public void setEpicTleAlertses(Set<EpicTleAlerts> epicTleAlertses) {
        this.epicTleAlertses = epicTleAlertses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByStatus")
    public Set<EpicTleTerminal> getEpicTleTerminalsForStatus() {
        return this.epicTleTerminalsForStatus;
    }

    public void setEpicTleTerminalsForStatus(Set<EpicTleTerminal> epicTleTerminalsForStatus) {
        this.epicTleTerminalsForStatus = epicTleTerminalsForStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByTpduStatus")
    public Set<EpicTleListeners> getEpicTleListenersesForTpduStatus() {
        return this.epicTleListenersesForTpduStatus;
    }

    public void setEpicTleListenersesForTpduStatus(Set<EpicTleListeners> epicTleListenersesForTpduStatus) {
        this.epicTleListenersesForTpduStatus = epicTleListenersesForTpduStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTleCardholders> getEpicTleCardholderses() {
        return this.epicTleCardholderses;
    }

    public void setEpicTleCardholderses(Set<EpicTleCardholders> epicTleCardholderses) {
        this.epicTleCardholderses = epicTleCardholderses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByBindStatus")
    public Set<EpicTleListeners> getEpicTleListenersesForBindStatus() {
        return this.epicTleListenersesForBindStatus;
    }

    public void setEpicTleListenersesForBindStatus(Set<EpicTleListeners> epicTleListenersesForBindStatus) {
        this.epicTleListenersesForBindStatus = epicTleListenersesForBindStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByStatus")
    public Set<EpicTleListeners> getEpicTleListenersesForStatus() {
        return this.epicTleListenersesForStatus;
    }

    public void setEpicTleListenersesForStatus(Set<EpicTleListeners> epicTleListenersesForStatus) {
        this.epicTleListenersesForStatus = epicTleListenersesForStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTleEsmodule> getEpicTleEsmodules() {
        return this.epicTleEsmodules;
    }

    public void setEpicTleEsmodules(Set<EpicTleEsmodule> epicTleEsmodules) {
        this.epicTleEsmodules = epicTleEsmodules;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByStatus")
    public Set<EpicTleChannel> getEpicTleChannelsForStatus() {
        return this.epicTleChannelsForStatus;
    }

    public void setEpicTleChannelsForStatus(Set<EpicTleChannel> epicTleChannelsForStatus) {
        this.epicTleChannelsForStatus = epicTleChannelsForStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByKeepAliveStatus")
    public Set<EpicTleChannel> getEpicTleChannelsForKeepAliveStatus() {
        return this.epicTleChannelsForKeepAliveStatus;
    }

    public void setEpicTleChannelsForKeepAliveStatus(Set<EpicTleChannel> epicTleChannelsForKeepAliveStatus) {
        this.epicTleChannelsForKeepAliveStatus = epicTleChannelsForKeepAliveStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTleOperationAlerts> getEpicTleOperationAlertses() {
        return this.epicTleOperationAlertses;
    }

    public void setEpicTleOperationAlertses(Set<EpicTleOperationAlerts> epicTleOperationAlertses) {
        this.epicTleOperationAlertses = epicTleOperationAlertses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTlePasswordPolicy> getEpicTlePasswordPolicies() {
        return this.epicTlePasswordPolicies;
    }

    public void setEpicTlePasswordPolicies(Set<EpicTlePasswordPolicy> epicTlePasswordPolicies) {
        this.epicTlePasswordPolicies = epicTlePasswordPolicies;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByBindStatus")
    public Set<EpicTleChannel> getEpicTleChannelsForBindStatus() {
        return this.epicTleChannelsForBindStatus;
    }

    public void setEpicTleChannelsForBindStatus(Set<EpicTleChannel> epicTleChannelsForBindStatus) {
        this.epicTleChannelsForBindStatus = epicTleChannelsForBindStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByLoadbalancestatus")
    public Set<EpicTleChannel> getEpicTleChannelsForLoadbalancestatus() {
        return this.epicTleChannelsForLoadbalancestatus;
    }

    public void setEpicTleChannelsForLoadbalancestatus(Set<EpicTleChannel> epicTleChannelsForLoadbalancestatus) {
        this.epicTleChannelsForLoadbalancestatus = epicTleChannelsForLoadbalancestatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByBindSecondaryStatus")
    public Set<EpicTleChannel> getEpicTleChannelsForBindSecondaryStatus() {
        return this.epicTleChannelsForBindSecondaryStatus;
    }

    public void setEpicTleChannelsForBindSecondaryStatus(Set<EpicTleChannel> epicTleChannelsForBindSecondaryStatus) {
        this.epicTleChannelsForBindSecondaryStatus = epicTleChannelsForBindSecondaryStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByListenerKeepAliveStatus")
    public Set<EpicTleListeners> getEpicTleListenersesForListenerKeepAliveStatus() {
        return this.epicTleListenersesForListenerKeepAliveStatus;
    }

    public void setEpicTleListenersesForListenerKeepAliveStatus(Set<EpicTleListeners> epicTleListenersesForListenerKeepAliveStatus) {
        this.epicTleListenersesForListenerKeepAliveStatus = epicTleListenersesForListenerKeepAliveStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTleSysOperation> getEpicTleSysOperations() {
        return this.epicTleSysOperations;
    }

    public void setEpicTleSysOperations(Set<EpicTleSysOperation> epicTleSysOperations) {
        this.epicTleSysOperations = epicTleSysOperations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatus")
    public Set<EpicTleStatusofresponse> getEpicTleStatusofresponses() {
        return this.epicTleStatusofresponses;
    }

    public void setEpicTleStatusofresponses(Set<EpicTleStatusofresponse> epicTleStatusofresponses) {
        this.epicTleStatusofresponses = epicTleStatusofresponses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByTpduStatus")
    public Set<EpicTleChannel> getEpicTleChannelsForTpduStatus() {
        return this.epicTleChannelsForTpduStatus;
    }

    public void setEpicTleChannelsForTpduStatus(Set<EpicTleChannel> epicTleChannelsForTpduStatus) {
        this.epicTleChannelsForTpduStatus = epicTleChannelsForTpduStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByPintranslateStatus")
    public Set<EpicTleChannel> getEpicTleChannelsForPintranslateStatus() {
        return this.epicTleChannelsForPintranslateStatus;
    }

    public void setEpicTleChannelsForPintranslateStatus(Set<EpicTleChannel> epicTleChannelsForPintranslateStatus) {
        this.epicTleChannelsForPintranslateStatus = epicTleChannelsForPintranslateStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByLogbackupstatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForLogbackupstatus() {
        return this.epicTleInitconfigsForLogbackupstatus;
    }

    public void setEpicTleInitconfigsForLogbackupstatus(Set<EpicTleInitconfig> epicTleInitconfigsForLogbackupstatus) {
        this.epicTleInitconfigsForLogbackupstatus = epicTleInitconfigsForLogbackupstatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByEsmstatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForEsmstatus() {
        return this.epicTleInitconfigsForEsmstatus;
    }

    public void setEpicTleInitconfigsForEsmstatus(Set<EpicTleInitconfig> epicTleInitconfigsForEsmstatus) {
        this.epicTleInitconfigsForEsmstatus = epicTleInitconfigsForEsmstatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByMonitorstatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForMonitorstatus() {
        return this.epicTleInitconfigsForMonitorstatus;
    }

    public void setEpicTleInitconfigsForMonitorstatus(Set<EpicTleInitconfig> epicTleInitconfigsForMonitorstatus) {
        this.epicTleInitconfigsForMonitorstatus = epicTleInitconfigsForMonitorstatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByHostfailalertstatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForHostfailalertstatus() {
        return this.epicTleInitconfigsForHostfailalertstatus;
    }

    public void setEpicTleInitconfigsForHostfailalertstatus(Set<EpicTleInitconfig> epicTleInitconfigsForHostfailalertstatus) {
        this.epicTleInitconfigsForHostfailalertstatus = epicTleInitconfigsForHostfailalertstatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByVipstatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForVipstatus() {
        return this.epicTleInitconfigsForVipstatus;
    }

    public void setEpicTleInitconfigsForVipstatus(Set<EpicTleInitconfig> epicTleInitconfigsForVipstatus) {
        this.epicTleInitconfigsForVipstatus = epicTleInitconfigsForVipstatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByCoreDebugStatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForCoreDebugStatus() {
        return this.epicTleInitconfigsForCoreDebugStatus;
    }

    public void setEpicTleInitconfigsForCoreDebugStatus(Set<EpicTleInitconfig> epicTleInitconfigsForCoreDebugStatus) {
        this.epicTleInitconfigsForCoreDebugStatus = epicTleInitconfigsForCoreDebugStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByAdVerifyStatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForAdVerifyStatus() {
        return this.epicTleInitconfigsForAdVerifyStatus;
    }

    public void setEpicTleInitconfigsForAdVerifyStatus(Set<EpicTleInitconfig> epicTleInitconfigsForAdVerifyStatus) {
        this.epicTleInitconfigsForAdVerifyStatus = epicTleInitconfigsForAdVerifyStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByAutoRegistaryStatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForAutoRegistaryStatus() {
        return this.epicTleInitconfigsForAutoRegistaryStatus;
    }
    public void setEpicTleInitconfigsForAutoRegistaryStatus(Set<EpicTleInitconfig> epicTleInitconfigsForAutoRegistaryStatus) {
        this.epicTleInitconfigsForAutoRegistaryStatus = epicTleInitconfigsForAutoRegistaryStatus;
    }
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusBySmsNotifyStatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForSmsNotifyStatus() {
        return this.epicTleInitconfigsForSmsNotifyStatus;
    }
    public void setEpicTleInitconfigsForSmsNotifyStatus(Set<EpicTleInitconfig> epicTleInitconfigsForSmsNotifyStatus) {
        this.epicTleInitconfigsForSmsNotifyStatus = epicTleInitconfigsForSmsNotifyStatus;
    }
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByUkptStatus")
    public Set<EpicTleInitconfig> getEpicTleInitconfigsForUkptStatus() {
        return this.epicTleInitconfigsForUkptStatus;
    }
    
    public void setEpicTleInitconfigsForUkptStatus(Set<EpicTleInitconfig> epicTleInitconfigsForUkptStatus) {
        this.epicTleInitconfigsForUkptStatus = epicTleInitconfigsForUkptStatus;
    }
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByBinstatus")
    public Set<EpicTleTerminal> getEpicTleTerminalsForBinstatus() {
        return this.epicTleTerminalsForBinstatus;
    }

    public void setEpicTleTerminalsForBinstatus(Set<EpicTleTerminal> epicTleTerminalsForBinstatus) {
        this.epicTleTerminalsForBinstatus = epicTleTerminalsForBinstatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByStatus")
    public Set<EpicTleTerminalRefprofile> getEpicTleTerminalRefprofilesForStatus() {
        return this.epicTleTerminalRefprofilesForStatus;
    }

    public void setEpicTleTerminalRefprofilesForStatus(Set<EpicTleTerminalRefprofile> epicTleTerminalRefprofilesForStatus) {
        this.epicTleTerminalRefprofilesForStatus = epicTleTerminalRefprofilesForStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByNfcTxnStatus")
    public Set<EpicTleTerminalRefprofile> getEpicTleTerminalRefprofilesForNfcTxnStatus() {
        return epicTleTerminalRefprofilesForNfcTxnStatus;
    }

    public void setEpicTleTerminalRefprofilesForNfcTxnStatus(Set<EpicTleTerminalRefprofile> epicTleTerminalRefprofilesForNfcTxnStatus) {
        this.epicTleTerminalRefprofilesForNfcTxnStatus = epicTleTerminalRefprofilesForNfcTxnStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "epicTleStatusByPinTxnStatus")
    public Set<EpicTleTerminalRefprofile> getEpicTleTerminalRefprofilesForPinTxnStatus() {
        return epicTleTerminalRefprofilesForPinTxnStatus;
    }

    public void setEpicTleTerminalRefprofilesForPinTxnStatus(Set<EpicTleTerminalRefprofile> epicTleTerminalRefprofilesForPinTxnStatus) {
        this.epicTleTerminalRefprofilesForPinTxnStatus = epicTleTerminalRefprofilesForPinTxnStatus;
    }
    

}
